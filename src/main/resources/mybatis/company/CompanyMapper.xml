<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.company.mapper.CompanyMapper">
    
    <resultMap type="Company" id="CompanyResult">
        <result property="id"    column="id"    />
        <result property="chainId"    column="chain_id"    />
        <result property="companyType"    column="company_type"    />
        <result property="name"    column="name"    />
        <result property="address"    column="address"    />
        <result property="reputation"    column="reputation"    />
        <result property="status"    column="status"    />
    </resultMap>

    <sql id="selectCompanyVo">
        select id, chain_id, company_type, name, address, reputation, status from company
    </sql>

    <select id="selectCompanyList" parameterType="Company" resultMap="CompanyResult">
        <include refid="selectCompanyVo"/>
        <where>  
            <if test="id != null "> and id = #{id}</if>
            <if test="chainId != null "> and chain_id = #{chainId}</if>
            <if test="companyType != null "> and company_type = #{companyType}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="status != null "> and status = #{status}</if>
        </where>
    </select>
    
    <select id="selectCompanyById" parameterType="Long" resultMap="CompanyResult">
        <include refid="selectCompanyVo"/>
        where id = #{id}
    </select>

    <insert id="insertCompany" parameterType="Company">
        insert into company
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="chainId != null">chain_id,</if>
            <if test="companyType != null">company_type,</if>
            <if test="name != null">name,</if>
            <if test="address != null">address,</if>
            <if test="reputation != null">reputation,</if>
            <if test="status != null">status,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="chainId != null">#{chainId},</if>
            <if test="companyType != null">#{companyType},</if>
            <if test="name != null">#{name},</if>
            <if test="address != null">#{address},</if>
            <if test="reputation != null">#{reputation},</if>
            <if test="status != null">#{status},</if>
         </trim>
    </insert>

    <update id="updateCompany" parameterType="Company">
        update company
        <trim prefix="SET" suffixOverrides=",">
            <if test="chainId != null">chain_id = #{chainId},</if>
            <if test="companyType != null">company_type = #{companyType},</if>
            <if test="name != null">name = #{name},</if>
            <if test="address != null">address = #{address},</if>
            <if test="reputation != null">reputation = #{reputation},</if>
            <if test="status != null">status = #{status},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteCompanyById" parameterType="Long">
        delete from company where id = #{id}
    </delete>

    <delete id="deleteCompanyByIds" parameterType="String">
        delete from company where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="getAllCompany" resultType="com.ruoyi.project.company.domain.Company">
        select * from company where status &lt;&gt; 3
    </select>

    <select id="getTransportCost" resultType="java.lang.Integer">
        select cost from company_transport_cost  where from_company_id =Least( #{fromCompany},#{toCompany}) and to_company_id = GREATEST(#{fromCompany},#{toCompany})
    </select>

    <select id="getAllTransportCosts" resultType="com.ruoyi.project.task.domain.TransPortCost">
    select *
    from company_transport_cost
</select>
<update id="updateCompanyStatus">
    update company
    set status = #{status}
    where id = #{companyId}
</update>
</mapper>